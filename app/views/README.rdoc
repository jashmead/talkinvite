== Views

=== Key Pages

==== Talk pages

--
No good way to produce nested lists in rdoc, apparently.
They produce white on black text by default.
Probably there is some way to change.
++

1. New Talk: * Topics/Tags * Posts * Map/Venue * Calendar * Members (for invites) * Attachments
1. Talk Control: same partials as for New Talk, some more buttons for RSVP, significant differences for creator/admin versus usual
1. Search for Talks: simple, location, time, members, attachments?

==== People pages

1. Home * Talks * Messages * TBD: Friends, Groups -- two views of the same information
1. Settings * Button to Change Password * Friends/Groups
1. Profile * Send Message Button * Friend/Unfriend * Group/Ungroup
1. Signup
1. Change Password
1. Messages
1. TBD: Oauth -- use the oauth chapter to set up
1. TBD: Upgrade -- may not go this route, 'ads' has a better feel
1. Friends, Groups -- two views of same information

==== Session pages

1. Signin
1. Reset Password -- use email chapter to set up

==== Help & Internal pages

1. Credits
1. Show Credit
1. Faqs
1. Show Faq
1. Helps
1. Show Help
1. Site Map

==== Tags/Topics/Trending

-- under Tags

-- look for tags in google, duckduckgo, others

-- look for tags in twitter

-- use location if possible

1. trending
1. search

==== Admin Pages

1. New, Edit Credit, Faq, Help (6 pages)
1. Search for People (maybe)

=== Partials Only

1. Posts -- next on list
1. Members
1. Comments
1. Maps -- do when doing the map
1. Friends -- do friends, groups, & relationships as a set
1. Groups
1. Relationships
1. Calendars -- do in rails first, then jquery
1. Attachments -- use the assets chapter to manage
1. Venues
1. Ads -- check out ad sense first

=== Start/Home page

-- currently using start, which forks into people/home, talks/recent

-- could use sitemap or about

=== Static elements
1. logo -- not really needed in mobile, replace with start except on start page, where it is blank?
1. title -- talk summary, person name, whatever, done by combo of view + controller + layout
1. account menu -- settings/new account on top right -- done
1. header -- specific to model, but not yet
1. footer -- specific to model, but not yet

=== Views are by Tables

-- see also list in app/models/README.rdoc

==== Root tables (full forms)

1. Sessions (virtual table)
1. People
1. Talks -- entry point for newbies
1. Tags/Topics
1. Credits
1. Faqs
1. Helps

==== Link tables (partials only or mostly)

1. Services
1. Posts
1. Comments -- zero to many for each person/talk pair, may have polymorphism in its future
1. Members -- one for each person/talk pair
1. Messages -- many for each person to person
1. Maps -- will need data, settings, controls
1. Attachments

==== System

1. Schema_migrations -- no controllers or views for these

=== Testing

* specified elements present
* specified links go to correct pages
* expandable items expand (& shrink)
* views shift as they should

=== Conventions

use popups or similar for all lists, as types of posts

back button on all pages -- done

placeholders + hidden labels
-- implementation in form_for_jqm
-- hidden fields do not need label!

use required for all required fields

use readonly for all readonly fields
  -- TBD: use for 'show' pages?

lots of icons -- first cut done

standardized transitions
-- one pair for popups
-- another pair for master/detail

try a variety of themes

add tooltips on everything
-- TBD: does title work for this?

one help page per page

group buttons on edit forms & related:  using data-role = controlgroup, data-type=horizontal -- do in detail

all buttons are data-inline = true
