var search_data = {"index":{"searchIndex":["activesupport","testcase","addadminandsubtopeople","addcolumnpersontotalks","addcolumntofaqs","addcolumntomaps","addcolumntopeople","addcolumntotweets","addcolumnstotalks","addforeignkeyfromtalkstopeople","addforeignkeytomessages","addforeignkeystorelationships","addindextopeopleemail","addindexestorelationships","addlocationcolumnstotalks","addmorecolumnstotalks","addpassworddigest","addremembertokentopeople","addtalk2userfk","addtalkidtomessages","addtypetopeople","adduniqueindextoattachments","addvenueidtotalks","addwhodesccolumntotalks","altercolumnforlocation","applicationcontroller","applicationhelper","changecolumnmessagetypeformessages","changecolumnstalks","changedefaultforposttype","changeposts","changetableposts","changetableservices","comment","commentscontroller","commentshelper","createcomments","createcredits","createfaqs","createhelps","createmaps","createmembers","createmessages","createpeople","createposts","createrelationships2","createrelationships3","createservices","createtable","createtalks","createuniqueindexes","credit","creditscontroller","creditshelper","deathtonulls","defaultvalues2","defaults","dropcolumnfromfaqs","dropcolumnlocationidfromtalks","dropcolumnpersontypefrompeople","dropcolumnposteddtfromtalks","dropmapsandcalendars","droptablemessages","droptablenotifications","droptablerelationships","droptalkidfrommessages","dropslotsoftables","endrelationships","faq","faqscontroller","faqshelper","fixup","fixupmessages","fixupsocials","foreignkeys","formbuilderjqm","help","helpscontroller","helpshelper","killdefaults","map","mapscontroller","mapshelper","member","memberdefaults","membertypedefault","memberscontroller","membershelper","message","messagescontroller","messageshelper","migration","notnull","notnull2","object","peoplecontroller","peoplehelper","person","post","postscontroller","postshelper","relationshipsforeignkeys2","relationshipsforeignkeys3","removecolumnsfrompeople","removefivetables","renamecolumnforpeople","renamecolumnfortags","renamecolumns","renamecolumnsincredits","renametwittercolumnforpeople","service","serviceforeignkeys","servicescontroller","serviceshelper","sessionscontroller","sessionshelper","setdefaultvalues","staticpagescontroller","staticpageshelper","statusfortalks","talk","talkvalidator","talkinvite","application","talkscontroller","talkshelper","willpaginate","actionview","jquerymobilepaginatelinkrenderer","about()","accept()","admin()","admin?()","anonymous()","anonymous()","button_back()","button_delete()","button_inline()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change_password()","check_box()","check_q()","color_local_field()","contact()","control()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_q()","current_help_page()","current_layout()","current_person()","current_person=()","current_person?()","current_talk()","current_talk=()","current_talk?()","data_theme()","date_local_field()","datetime_field()","datetime_local_field()","decline()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_q()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","down()","drop()","drop()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","email_field()","encrypt()","esarch_field()","fail_q()","feet_center()","feet_center()","feet_center()","feet_center()","feet_center()","feet_center()","feet_center()","feet_center()","feet_for_help_pages()","feet_for_people_pages()","feet_for_static_pages()","file_field()","find_by_remember_token()","footer_fields()","force!()","form_for_jqm()","found()","found()","found()","gravatar_for()","help()","home()","home_page()","html_container()","iconify()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","map()","map()","map_q()","maybe()","member_type_create_or_change()","messages_by_person()","my_messages()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_remember_token()","number_field()","oauth()","pagination()","password_field()","phone_field()","posted()","previous_or_next_page()","privacy()","profile()","radio_button()","range_field()","redirect_back_or()","report_q()","reset_password()","root_link()","rsvp_status_create_or_change()","sayonara()","search()","search()","search()","search_fields()","search_fields()","search_fields()","search_fields()","search_fields()","search_fields()","search_fields()","search_fields()","search_fields()","search_q()","settings()","settings_link()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","sign_in()","sign_in()","signed_in?()","signed_in_person()","signin_link()","signout()","signout_link()","signout_page()","signup_link()","sitemap()","sitemap_page()","start()","start_page()","store_location()","sub?()","submit()","swatch()","tagged_id()","talks_by_person()","talks_new_page()","talks_search_page()","teapot_q()","telephone_field()","test_flow()","text_area()","text_field()","time_field()","unadmin()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","up()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_q()","url_field()","valid_signin()","validate()","week_field()","wrap()","admin","devnotes","gemfile","monetization","procfile","readme","rakefile","stories","readme","m","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","l","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","d","readme","readme","robots","readme","readme","readme","readme","d"],"longSearchIndex":["activesupport","activesupport::testcase","addadminandsubtopeople","addcolumnpersontotalks","addcolumntofaqs","addcolumntomaps","addcolumntopeople","addcolumntotweets","addcolumnstotalks","addforeignkeyfromtalkstopeople","addforeignkeytomessages","addforeignkeystorelationships","addindextopeopleemail","addindexestorelationships","addlocationcolumnstotalks","addmorecolumnstotalks","addpassworddigest","addremembertokentopeople","addtalk2userfk","addtalkidtomessages","addtypetopeople","adduniqueindextoattachments","addvenueidtotalks","addwhodesccolumntotalks","altercolumnforlocation","applicationcontroller","applicationhelper","changecolumnmessagetypeformessages","changecolumnstalks","changedefaultforposttype","changeposts","changetableposts","changetableservices","comment","commentscontroller","commentshelper","createcomments","createcredits","createfaqs","createhelps","createmaps","createmembers","createmessages","createpeople","createposts","createrelationships2","createrelationships3","createservices","createtable","createtalks","createuniqueindexes","credit","creditscontroller","creditshelper","deathtonulls","defaultvalues2","defaults","dropcolumnfromfaqs","dropcolumnlocationidfromtalks","dropcolumnpersontypefrompeople","dropcolumnposteddtfromtalks","dropmapsandcalendars","droptablemessages","droptablenotifications","droptablerelationships","droptalkidfrommessages","dropslotsoftables","endrelationships","faq","faqscontroller","faqshelper","fixup","fixupmessages","fixupsocials","foreignkeys","formbuilderjqm","help","helpscontroller","helpshelper","killdefaults","map","mapscontroller","mapshelper","member","memberdefaults","membertypedefault","memberscontroller","membershelper","message","messagescontroller","messageshelper","migration","notnull","notnull2","object","peoplecontroller","peoplehelper","person","post","postscontroller","postshelper","relationshipsforeignkeys2","relationshipsforeignkeys3","removecolumnsfrompeople","removefivetables","renamecolumnforpeople","renamecolumnfortags","renamecolumns","renamecolumnsincredits","renametwittercolumnforpeople","service","serviceforeignkeys","servicescontroller","serviceshelper","sessionscontroller","sessionshelper","setdefaultvalues","staticpagescontroller","staticpageshelper","statusfortalks","talk","talkvalidator","talkinvite","talkinvite::application","talkscontroller","talkshelper","willpaginate","willpaginate::actionview","willpaginate::actionview::jquerymobilepaginatelinkrenderer","staticpagescontroller#about()","member::accept()","member::admin()","sessionshelper#admin?()","person::anonymous()","sessionshelper#anonymous()","applicationhelper#button_back()","applicationhelper#button_delete()","applicationhelper#button_inline()","addadminandsubtopeople#change()","addcolumnpersontotalks#change()","addcolumntofaqs#change()","addcolumntomaps#change()","addcolumntopeople#change()","addcolumntotweets#change()","addcolumnstotalks#change()","addindextopeopleemail#change()","addindexestorelationships#change()","addlocationcolumnstotalks#change()","addmorecolumnstotalks#change()","addpassworddigest#change()","addremembertokentopeople#change()","addtypetopeople#change()","adduniqueindextoattachments#change()","addvenueidtotalks#change()","addwhodesccolumntotalks#change()","altercolumnforlocation#change()","changecolumnmessagetypeformessages#change()","changecolumnstalks#change()","changedefaultforposttype#change()","changeposts#change()","changetableposts#change()","createcredits#change()","createfaqs#change()","createhelps#change()","createmaps#change()","createmembers#change()","createpeople#change()","createposts#change()","createrelationships2#change()","createrelationships3#change()","createservices#change()","createtable#change()","createtalks#change()","createuniqueindexes#change()","defaultvalues2#change()","defaults#change()","dropcolumnfromfaqs#change()","dropcolumnlocationidfromtalks#change()","droptablerelationships#change()","droptalkidfrommessages#change()","killdefaults#change()","notnull#change()","notnull2#change()","removefivetables#change()","renamecolumnforpeople#change()","renamecolumnfortags#change()","renamecolumns#change()","renamecolumnsincredits#change()","renametwittercolumnforpeople#change()","setdefaultvalues#change()","statusfortalks#change()","peoplecontroller#change_password()","formbuilderjqm#check_box()","applicationcontroller#check_q()","formbuilderjqm#color_local_field()","staticpagescontroller#contact()","talkscontroller#control()","commentscontroller#create()","creditscontroller#create()","faqscontroller#create()","helpscontroller#create()","mapscontroller#create()","memberscontroller#create()","messagescontroller#create()","peoplecontroller#create()","postscontroller#create()","servicescontroller#create()","sessionscontroller#create()","talkscontroller#create()","applicationcontroller#create_q()","applicationcontroller#current_help_page()","applicationhelper#current_layout()","sessionshelper#current_person()","sessionshelper#current_person=()","sessionshelper#current_person?()","sessionshelper#current_talk()","sessionshelper#current_talk=()","sessionshelper#current_talk?()","applicationhelper#data_theme()","formbuilderjqm#date_local_field()","formbuilderjqm#datetime_field()","formbuilderjqm#datetime_local_field()","member::decline()","commentscontroller#destroy()","creditscontroller#destroy()","faqscontroller#destroy()","helpscontroller#destroy()","mapscontroller#destroy()","memberscontroller#destroy()","messagescontroller#destroy()","peoplecontroller#destroy()","postscontroller#destroy()","servicescontroller#destroy()","sessionscontroller#destroy()","talkscontroller#destroy()","applicationcontroller#destroy_q()","addforeignkeyfromtalkstopeople#down()","addforeignkeystorelationships#down()","addtalk2userfk#down()","changetableservices#down()","createcomments#down()","createmessages::down()","deathtonulls#down()","dropcolumnpersontypefrompeople#down()","dropcolumnposteddtfromtalks#down()","fixupsocials::down()","foreignkeys#down()","memberdefaults::down()","membertypedefault::down()","relationshipsforeignkeys2#down()","relationshipsforeignkeys3#down()","removecolumnsfrompeople#down()","serviceforeignkeys#down()","setdefaultvalues::down()","addforeignkeytomessages#drop()","addtalkidtomessages#drop()","commentscontroller#edit()","creditscontroller#edit()","faqscontroller#edit()","helpscontroller#edit()","mapscontroller#edit()","memberscontroller#edit()","messagescontroller#edit()","peoplecontroller#edit()","postscontroller#edit()","servicescontroller#edit()","talkscontroller#edit()","formbuilderjqm#email_field()","person::encrypt()","formbuilderjqm#esarch_field()","applicationcontroller#fail_q()","applicationcontroller#feet_center()","creditscontroller#feet_center()","faqscontroller#feet_center()","helpscontroller#feet_center()","messagescontroller#feet_center()","peoplecontroller#feet_center()","staticpagescontroller#feet_center()","talkscontroller#feet_center()","applicationcontroller#feet_for_help_pages()","applicationcontroller#feet_for_people_pages()","applicationcontroller#feet_for_static_pages()","formbuilderjqm#file_field()","person#find_by_remember_token()","applicationcontroller#footer_fields()","person::force!()","applicationhelper#form_for_jqm()","applicationcontroller#found()","peoplecontroller#found()","talkscontroller#found()","peoplehelper#gravatar_for()","helpscontroller#help()","peoplecontroller#home()","applicationcontroller#home_page()","willpaginate::actionview::jquerymobilepaginatelinkrenderer#html_container()","sessionshelper#iconify()","applicationcontroller#index()","commentscontroller#index()","creditscontroller#index()","faqscontroller#index()","helpscontroller#index()","mapscontroller#index()","memberscontroller#index()","messagescontroller#index()","peoplecontroller#index()","postscontroller#index()","servicescontroller#index()","talkscontroller#index()","peoplecontroller#map()","talkscontroller#map()","applicationcontroller#map_q()","member::maybe()","member::member_type_create_or_change()","message::messages_by_person()","messagescontroller#my_messages()","commentscontroller#new()","creditscontroller#new()","faqscontroller#new()","helpscontroller#new()","mapscontroller#new()","memberscontroller#new()","messagescontroller#new()","peoplecontroller#new()","postscontroller#new()","servicescontroller#new()","sessionscontroller#new()","talkscontroller#new()","person::new_remember_token()","formbuilderjqm#number_field()","peoplecontroller#oauth()","willpaginate::actionview::jquerymobilepaginatelinkrenderer#pagination()","formbuilderjqm#password_field()","formbuilderjqm#phone_field()","talk::posted()","willpaginate::actionview::jquerymobilepaginatelinkrenderer#previous_or_next_page()","staticpagescontroller#privacy()","peoplecontroller#profile()","formbuilderjqm#radio_button()","formbuilderjqm#range_field()","sessionshelper#redirect_back_or()","applicationcontroller#report_q()","sessionscontroller#reset_password()","sessionshelper#root_link()","member::rsvp_status_create_or_change()","sessionscontroller#sayonara()","applicationcontroller#search()","peoplecontroller#search()","talkscontroller#search()","applicationcontroller#search_fields()","commentscontroller#search_fields()","faqscontroller#search_fields()","memberscontroller#search_fields()","messagescontroller#search_fields()","peoplecontroller#search_fields()","sessionscontroller#search_fields()","staticpagescontroller#search_fields()","talkscontroller#search_fields()","applicationcontroller#search_q()","peoplecontroller#settings()","sessionshelper#settings_link()","commentscontroller#show()","creditscontroller#show()","faqscontroller#show()","helpscontroller#show()","mapscontroller#show()","memberscontroller#show()","messagescontroller#show()","peoplecontroller#show()","postscontroller#show()","servicescontroller#show()","talkscontroller#show()","object#sign_in()","sessionshelper#sign_in()","sessionshelper#signed_in?()","sessionshelper#signed_in_person()","sessionshelper#signin_link()","sessionshelper#signout()","sessionshelper#signout_link()","applicationcontroller#signout_page()","sessionshelper#signup_link()","staticpagescontroller#sitemap()","applicationcontroller#sitemap_page()","talkscontroller#start()","applicationcontroller#start_page()","sessionshelper#store_location()","sessionshelper#sub?()","formbuilderjqm#submit()","applicationhelper#swatch()","applicationhelper#tagged_id()","talk::talks_by_person()","applicationcontroller#talks_new_page()","applicationcontroller#talks_search_page()","applicationcontroller#teapot_q()","formbuilderjqm#telephone_field()","applicationhelper#test_flow()","formbuilderjqm#text_area()","formbuilderjqm#text_field()","formbuilderjqm#time_field()","member::unadmin()","addforeignkeyfromtalkstopeople#up()","addforeignkeytomessages#up()","addforeignkeystorelationships#up()","addtalk2userfk#up()","addtalkidtomessages#up()","changetableservices#up()","createcomments#up()","createmessages::up()","deathtonulls#up()","dropcolumnpersontypefrompeople#up()","dropcolumnposteddtfromtalks#up()","dropmapsandcalendars#up()","droptablemessages::up()","droptablenotifications::up()","dropslotsoftables::up()","endrelationships::up()","fixup#up()","fixupmessages::up()","fixupsocials::up()","foreignkeys#up()","memberdefaults::up()","membertypedefault::up()","relationshipsforeignkeys2#up()","relationshipsforeignkeys3#up()","removecolumnsfrompeople#up()","serviceforeignkeys#up()","commentscontroller#update()","creditscontroller#update()","faqscontroller#update()","helpscontroller#update()","mapscontroller#update()","memberscontroller#update()","messagescontroller#update()","peoplecontroller#update()","postscontroller#update()","servicescontroller#update()","talkscontroller#update()","applicationcontroller#update_q()","formbuilderjqm#url_field()","object#valid_signin()","talkvalidator#validate()","formbuilderjqm#week_field()","talkshelper#wrap()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["ActiveSupport","","ActiveSupport.html","",""],["ActiveSupport::TestCase","","ActiveSupport/TestCase.html","",""],["AddAdminAndSubToPeople","","AddAdminAndSubToPeople.html","",""],["AddColumnPersonToTalks","","AddColumnPersonToTalks.html","",""],["AddColumnToFaqs","","AddColumnToFaqs.html","",""],["AddColumnToMaps","","AddColumnToMaps.html","",""],["AddColumnToPeople","","AddColumnToPeople.html","",""],["AddColumnToTweets","","AddColumnToTweets.html","",""],["AddColumnsToTalks","","AddColumnsToTalks.html","",""],["AddForeignKeyFromTalksToPeople","","AddForeignKeyFromTalksToPeople.html","",""],["AddForeignKeyToMessages","","AddForeignKeyToMessages.html","",""],["AddForeignKeysToRelationships","","AddForeignKeysToRelationships.html","",""],["AddIndexToPeopleEmail","","AddIndexToPeopleEmail.html","",""],["AddIndexesToRelationships","","AddIndexesToRelationships.html","",""],["AddLocationColumnsToTalks","","AddLocationColumnsToTalks.html","",""],["AddMoreColumnsToTalks","","AddMoreColumnsToTalks.html","",""],["AddPasswordDigest","","AddPasswordDigest.html","",""],["AddRememberTokenToPeople","","AddRememberTokenToPeople.html","",""],["AddTalk2userFk","","AddTalk2userFk.html","",""],["AddTalkIdToMessages","","AddTalkIdToMessages.html","",""],["AddTypeToPeople","","AddTypeToPeople.html","",""],["AddUniqueIndexToAttachments","","AddUniqueIndexToAttachments.html","",""],["AddVenueIdToTalks","","AddVenueIdToTalks.html","",""],["AddWhoDescColumnToTalks","","AddWhoDescColumnToTalks.html","",""],["AlterColumnForLocation","","AlterColumnForLocation.html","",""],["ApplicationController","","ApplicationController.html","","<p>for associations\n<p>use association to fetch, build + = to create in memory, create to build\n&amp; save at …\n"],["ApplicationHelper","","ApplicationHelper.html","","<p>put view helpers as test_flow &amp; form_for_jqm here\n\n<pre>-- can store classes in app/helpers as well, i.e. ...</pre>\n"],["ChangeColumnMessageTypeForMessages","","ChangeColumnMessageTypeForMessages.html","",""],["ChangeColumnsTalks","","ChangeColumnsTalks.html","",""],["ChangeDefaultForPostType","","ChangeDefaultForPostType.html","",""],["ChangePosts","","ChangePosts.html","",""],["ChangeTablePosts","","ChangeTablePosts.html","",""],["ChangeTableServices","","ChangeTableServices.html","",""],["Comment","","Comment.html","","<p>Comments\n<p>Child of talks\n<p>May have polymorphism in its future In that case, will need a\ncommentable_type …\n"],["CommentsController","","CommentsController.html","","<p>Comments Controller\n<p>index is always nested\n\n<pre>all that we can really do with comments are add them, delete ...</pre>\n"],["CommentsHelper","","CommentsHelper.html","",""],["CreateComments","","CreateComments.html","",""],["CreateCredits","","CreateCredits.html","",""],["CreateFaqs","","CreateFaqs.html","",""],["CreateHelps","","CreateHelps.html","",""],["CreateMaps","","CreateMaps.html","",""],["CreateMembers","","CreateMembers.html","",""],["CreateMessages","","CreateMessages.html","",""],["CreatePeople","","CreatePeople.html","",""],["CreatePosts","","CreatePosts.html","",""],["CreateRelationships2","","CreateRelationships2.html","",""],["CreateRelationships3","","CreateRelationships3.html","",""],["CreateServices","","CreateServices.html","",""],["CreateTable","","CreateTable.html","",""],["CreateTalks","","CreateTalks.html","",""],["CreateUniqueIndexes","","CreateUniqueIndexes.html","",""],["Credit","","Credit.html","","<p>Credits\n<p>Give credit to various deserving persons\n<p>Expect we will add a &#39;url&#39; field to this\n"],["CreditsController","","CreditsController.html","","<p>Credits Controller\n<p>only admins can add credits?\n<p>massively parallel to faqs &amp; credis\n"],["CreditsHelper","","CreditsHelper.html","",""],["DeathToNulls","","DeathToNulls.html","",""],["DefaultValues2","","DefaultValues2.html","",""],["Defaults","","Defaults.html","",""],["DropColumnFromFaqs","","DropColumnFromFaqs.html","",""],["DropColumnLocationIdFromTalks","","DropColumnLocationIdFromTalks.html","",""],["DropColumnPersonTypeFromPeople","","DropColumnPersonTypeFromPeople.html","",""],["DropColumnPostedDtFromTalks","","DropColumnPostedDtFromTalks.html","",""],["DropMapsAndCalendars","","DropMapsAndCalendars.html","",""],["DropTableMessages","","DropTableMessages.html","",""],["DropTableNotifications","","DropTableNotifications.html","",""],["DropTableRelationships","","DropTableRelationships.html","",""],["DropTalkIdFromMessages","","DropTalkIdFromMessages.html","",""],["DropsLotsOfTables","","DropsLotsOfTables.html","",""],["EndRelationships","","EndRelationships.html","",""],["Faq","","Faq.html","","<p>FAQS\n<p>question is unique, with respect to answers:  there can be only one!\n<p>expect will often have attachment …\n"],["FaqsController","","FaqsController.html","","<p>FAQs Controller\n<p>only admins can add faqs?\n"],["FaqsHelper","","FaqsHelper.html","",""],["Fixup","","Fixup.html","",""],["FixupMessages","","FixupMessages.html","",""],["FixupSocials","","FixupSocials.html","",""],["ForeignKeys","","ForeignKeys.html","",""],["FormBuilderJqm","","FormBuilderJqm.html","","<p>WORKAROUND:  partials appear to have access to all functions available to\nforms\n\n<pre>-- therefore put code ...</pre>\n"],["Help","","Help.html","","<p>Helps\n<p>helps.name is unique &amp; space-free\n<p>those helps associated with pages can be edited on the fly …\n"],["HelpsController","","HelpsController.html","","<p>massively parallel to faqs &amp; credis\n<p>TBD: on the footer, do we want to use the faqs, credits, &amp; …\n"],["HelpsHelper","","HelpsHelper.html","",""],["KillDefaults","","KillDefaults.html","",""],["Map","","Map.html","","<p>Maps\n<p>Virtual table, used to help manage maps for talks\n<p>we may generalize to include maps of people (by …\n"],["MapsController","","MapsController.html","","<p>Maps Controller\n<p>may need to use multiple source for maps, i.e. google, yahoo, open street\nmap\n<p>default set …\n"],["MapsHelper","","MapsHelper.html","",""],["Member","","Member.html","","<p>Members\n<p>Fields\n<p>person_id\n"],["MemberDefaults","","MemberDefaults.html","",""],["MemberTypeDefault","","MemberTypeDefault.html","",""],["MembersController","","MembersController.html","","<p>Members Controller\n\n<pre>add accept/decline/maybe operations here, calling on the model functions with the same ...</pre>\n"],["MembersHelper","","MembersHelper.html","",""],["Message","","Message.html","","<p>Messages\n<p>search should in general be only of messages from or two the current\naccount\n\n<pre>should look for stuff ...</pre>\n"],["MessagesController","","MessagesController.html","","<p>Messages Controller\n<p>usually from a specific source point\n"],["MessagesHelper","","MessagesHelper.html","",""],["Migration","","Migration.html","",""],["NotNull","","NotNull.html","",""],["NotNull2","","NotNull2.html","",""],["Object","","Object.html","",""],["PeopleController","","PeopleController.html","","<p>People Controller\n<p>2nd most important controller\n<p>TBD:  add in separate change password form\n"],["PeopleHelper","","PeopleHelper.html","",""],["Person","","Person.html","","<p>Fields contemplated\n<p>active_flag – use to deactivate when the user has killed, in case there is\nother …\n"],["Post","","Post.html","","<p>Posts\n<p>Posts are comments that also change the state of the talk\n"],["PostsController","","PostsController.html","","<p>Posts\n<p>change talk status &amp; post messages\n"],["PostsHelper","","PostsHelper.html","",""],["RelationshipsForeignKeys2","","RelationshipsForeignKeys2.html","",""],["RelationshipsForeignKeys3","","RelationshipsForeignKeys3.html","",""],["RemoveColumnsFromPeople","","RemoveColumnsFromPeople.html","",""],["RemoveFiveTables","","RemoveFiveTables.html","",""],["RenameColumnForPeople","","RenameColumnForPeople.html","",""],["RenameColumnForTags","","RenameColumnForTags.html","",""],["RenameColumns","","RenameColumns.html","",""],["RenameColumnsInCredits","","RenameColumnsInCredits.html","",""],["RenameTwitterColumnForPeople","","RenameTwitterColumnForPeople.html","",""],["Service","","Service.html","","<p>Services\n<p>Point up to people\n<p>restricted types, but as yet no service_types table planned\n"],["ServiceForeignKeys","","ServiceForeignKeys.html","",""],["ServicesController","","ServicesController.html","","<p>TBD: Services don&#39;t really have a lot of actions associated with them;\nthin their controller out …\n"],["ServicesHelper","","ServicesHelper.html","",""],["SessionsController","","SessionsController.html","","<p>TBD:  should we be using &#39;reset_session&#39; (see\nipc.webitedesigncost.com/security.html)  on a successful …\n"],["SessionsHelper","","SessionsHelper.html","","<p>what context are these functions running in? SessionsHelper is pulled in\nvia an explicit “include …\n"],["SetDefaultValues","","SetDefaultValues.html","",""],["StaticPagesController","","StaticPagesController.html","","<p>Static Pages\n<p>TBD:  add in topics pages/routes – i.e. stuff to talk about\n"],["StaticPagesHelper","","StaticPagesHelper.html","",""],["StatusForTalks","","StatusForTalks.html","",""],["Talk","","Talk.html","","<p>for associations\n<p>use association to fetch, build + = to create in memory, create to build\n&amp; save at …\n"],["TalkValidator","","TalkValidator.html","",""],["Talkinvite","","Talkinvite.html","",""],["Talkinvite::Application","","Talkinvite/Application.html","",""],["TalksController","","TalksController.html","","<p>there are no longer routes to nearby, recent, &amp; roulette because search\nnow includes location stuff …\n"],["TalksHelper","","TalksHelper.html","",""],["WillPaginate","","WillPaginate.html","","<p># source\nstackoverflow.com/questions/16074719/set-jquery-mobile-attributes-in-rails-paginate\n# TBD:  …\n"],["WillPaginate::ActionView","","WillPaginate/ActionView.html","",""],["WillPaginate::ActionView::JqueryMobilePaginateLinkRenderer","","WillPaginate/ActionView/JqueryMobilePaginateLinkRenderer.html","",""],["about","StaticPagesController","StaticPagesController.html#method-i-about","()",""],["accept","Member","Member.html#method-c-accept","(person_id, talk_id)",""],["admin","Member","Member.html#method-c-admin","(person_id, talk_id)",""],["admin?","SessionsHelper","SessionsHelper.html#method-i-admin-3F","()","<p>placeholders for admin &amp; sub booleans; seem to work fine\n"],["anonymous","Person","Person.html#method-c-anonymous","()","<p>tried &#39;anonymous&#39; in the app/helpers, got whined at…\n"],["anonymous","SessionsHelper","SessionsHelper.html#method-i-anonymous","()","<p>guesswork as to how to best handle anonymous\n"],["button_back","ApplicationHelper","ApplicationHelper.html#method-i-button_back","(tag)","<p>TBD:  does &#39;button_back&#39; actually work?\n"],["button_delete","ApplicationHelper","ApplicationHelper.html#method-i-button_delete","(model)","<p>TBD:  add a warning color to the delete button, here or better via css\n"],["button_inline","ApplicationHelper","ApplicationHelper.html#method-i-button_inline","(tag, link_path)","<p>TBD:  various front ends to button_inline possible, as for &#39;new&#39;,\n&#39;update&#39;, and so on… …\n"],["change","AddAdminAndSubToPeople","AddAdminAndSubToPeople.html#method-i-change","()",""],["change","AddColumnPersonToTalks","AddColumnPersonToTalks.html#method-i-change","()",""],["change","AddColumnToFaqs","AddColumnToFaqs.html#method-i-change","()",""],["change","AddColumnToMaps","AddColumnToMaps.html#method-i-change","()",""],["change","AddColumnToPeople","AddColumnToPeople.html#method-i-change","()",""],["change","AddColumnToTweets","AddColumnToTweets.html#method-i-change","()",""],["change","AddColumnsToTalks","AddColumnsToTalks.html#method-i-change","()",""],["change","AddIndexToPeopleEmail","AddIndexToPeopleEmail.html#method-i-change","()",""],["change","AddIndexesToRelationships","AddIndexesToRelationships.html#method-i-change","()",""],["change","AddLocationColumnsToTalks","AddLocationColumnsToTalks.html#method-i-change","()",""],["change","AddMoreColumnsToTalks","AddMoreColumnsToTalks.html#method-i-change","()",""],["change","AddPasswordDigest","AddPasswordDigest.html#method-i-change","()",""],["change","AddRememberTokenToPeople","AddRememberTokenToPeople.html#method-i-change","()",""],["change","AddTypeToPeople","AddTypeToPeople.html#method-i-change","()",""],["change","AddUniqueIndexToAttachments","AddUniqueIndexToAttachments.html#method-i-change","()",""],["change","AddVenueIdToTalks","AddVenueIdToTalks.html#method-i-change","()",""],["change","AddWhoDescColumnToTalks","AddWhoDescColumnToTalks.html#method-i-change","()",""],["change","AlterColumnForLocation","AlterColumnForLocation.html#method-i-change","()",""],["change","ChangeColumnMessageTypeForMessages","ChangeColumnMessageTypeForMessages.html#method-i-change","()",""],["change","ChangeColumnsTalks","ChangeColumnsTalks.html#method-i-change","()",""],["change","ChangeDefaultForPostType","ChangeDefaultForPostType.html#method-i-change","()",""],["change","ChangePosts","ChangePosts.html#method-i-change","()",""],["change","ChangeTablePosts","ChangeTablePosts.html#method-i-change","()",""],["change","CreateCredits","CreateCredits.html#method-i-change","()",""],["change","CreateFaqs","CreateFaqs.html#method-i-change","()",""],["change","CreateHelps","CreateHelps.html#method-i-change","()",""],["change","CreateMaps","CreateMaps.html#method-i-change","()",""],["change","CreateMembers","CreateMembers.html#method-i-change","()",""],["change","CreatePeople","CreatePeople.html#method-i-change","()",""],["change","CreatePosts","CreatePosts.html#method-i-change","()",""],["change","CreateRelationships2","CreateRelationships2.html#method-i-change","()",""],["change","CreateRelationships3","CreateRelationships3.html#method-i-change","()",""],["change","CreateServices","CreateServices.html#method-i-change","()",""],["change","CreateTable","CreateTable.html#method-i-change","()",""],["change","CreateTalks","CreateTalks.html#method-i-change","()",""],["change","CreateUniqueIndexes","CreateUniqueIndexes.html#method-i-change","()",""],["change","DefaultValues2","DefaultValues2.html#method-i-change","()",""],["change","Defaults","Defaults.html#method-i-change","()",""],["change","DropColumnFromFaqs","DropColumnFromFaqs.html#method-i-change","()",""],["change","DropColumnLocationIdFromTalks","DropColumnLocationIdFromTalks.html#method-i-change","()",""],["change","DropTableRelationships","DropTableRelationships.html#method-i-change","()",""],["change","DropTalkIdFromMessages","DropTalkIdFromMessages.html#method-i-change","()",""],["change","KillDefaults","KillDefaults.html#method-i-change","()",""],["change","NotNull","NotNull.html#method-i-change","()",""],["change","NotNull2","NotNull2.html#method-i-change","()",""],["change","RemoveFiveTables","RemoveFiveTables.html#method-i-change","()",""],["change","RenameColumnForPeople","RenameColumnForPeople.html#method-i-change","()",""],["change","RenameColumnForTags","RenameColumnForTags.html#method-i-change","()",""],["change","RenameColumns","RenameColumns.html#method-i-change","()",""],["change","RenameColumnsInCredits","RenameColumnsInCredits.html#method-i-change","()",""],["change","RenameTwitterColumnForPeople","RenameTwitterColumnForPeople.html#method-i-change","()",""],["change","SetDefaultValues","SetDefaultValues.html#method-i-change","()",""],["change","StatusForTalks","StatusForTalks.html#method-i-change","()",""],["change_password","PeopleController","PeopleController.html#method-i-change_password","()",""],["check_box","FormBuilderJqm","FormBuilderJqm.html#method-i-check_box","(attribute, options = {} )","<p># TBD:  is there a problem with the wrapping for button?\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">button</span>(<span class=\"ruby-identifier\">attribute</span>, <span class=\"ruby-identifier\">options</span> = {} )\n  (<span class=\"ruby-identifier\">pre_field</span>(<span class=\"ruby-identifier\">attribute</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["check_q","ApplicationController","ApplicationController.html#method-i-check_q","()","<p>pull out the query string &amp; make sure it is not empty if running a\nsearch/start screen, start will …\n"],["color_local_field","FormBuilderJqm","FormBuilderJqm.html#method-i-color_local_field","(attribute, options = {} )",""],["contact","StaticPagesController","StaticPagesController.html#method-i-contact","()",""],["control","TalksController","TalksController.html#method-i-control","()","<p>GET /talks/1/control TBD:  saving from control is done via ajax TBD:  add\ncontrol into routes\n"],["create","CommentsController","CommentsController.html#method-i-create","()","<p>POST /comments POST /comments.json\n"],["create","CreditsController","CreditsController.html#method-i-create","()","<p>POST /credits POST /credits.json\n"],["create","FaqsController","FaqsController.html#method-i-create","()","<p>POST /faqs POST /faqs.json\n"],["create","HelpsController","HelpsController.html#method-i-create","()","<p>POST /helps POST /helps.json\n"],["create","MapsController","MapsController.html#method-i-create","()","<p>POST /maps POST /maps.json\n"],["create","MembersController","MembersController.html#method-i-create","()","<p>POST /members POST /members.json\n"],["create","MessagesController","MessagesController.html#method-i-create","()","<p>POST /messages POST /messages.json\n"],["create","PeopleController","PeopleController.html#method-i-create","()","<p>POST /people POST /people.json\n"],["create","PostsController","PostsController.html#method-i-create","()","<p>POST /posts POST /posts.json\n"],["create","ServicesController","ServicesController.html#method-i-create","()","<p>POST /services POST /services.json\n"],["create","SessionsController","SessionsController.html#method-i-create","()","<p>TBD:  allow signin by name as well as by email: fix this code &amp; the\nform\n"],["create","TalksController","TalksController.html#method-i-create","()","<p>POST /talks POST /talks.json\n"],["create_q","ApplicationController","ApplicationController.html#method-i-create_q","(model)",""],["current_help_page","ApplicationController","ApplicationController.html#method-i-current_help_page","()","<p>note:  accommodating current_help_page is much of the reason for the\ngenerality of the footer\n"],["current_layout","ApplicationHelper","ApplicationHelper.html#method-i-current_layout","()","<p>see\nstackoverflow.com/questions/3326579/rails3-get-current-layout-name-inside-view\n"],["current_person","SessionsHelper","SessionsHelper.html#method-i-current_person","()","<p>current_person is really &#39;logged_in_person&#39;, who are you signed in\nas?\n"],["current_person=","SessionsHelper","SessionsHelper.html#method-i-current_person-3D","(person)","<p>why is this squib needed?\n"],["current_person?","SessionsHelper","SessionsHelper.html#method-i-current_person-3F","(person)",""],["current_talk","SessionsHelper","SessionsHelper.html#method-i-current_talk","()","<p>current_talk is really &#39;logged_in_talk&#39;, who are you signed in as?\n"],["current_talk=","SessionsHelper","SessionsHelper.html#method-i-current_talk-3D","(talk)","<p>why is this squib needed?\n"],["current_talk?","SessionsHelper","SessionsHelper.html#method-i-current_talk-3F","(talk)",""],["data_theme","ApplicationHelper","ApplicationHelper.html#method-i-data_theme","( controller_name = nil )",""],["date_local_field","FormBuilderJqm","FormBuilderJqm.html#method-i-date_local_field","(attribute, options = {} )",""],["datetime_field","FormBuilderJqm","FormBuilderJqm.html#method-i-datetime_field","(attribute, options = {} )",""],["datetime_local_field","FormBuilderJqm","FormBuilderJqm.html#method-i-datetime_local_field","(attribute, options = {} )",""],["decline","Member","Member.html#method-c-decline","(person_id, talk_id)",""],["destroy","CommentsController","CommentsController.html#method-i-destroy","()","<p>DELETE /comments/1 DELETE /comments/1.json\n"],["destroy","CreditsController","CreditsController.html#method-i-destroy","()","<p>DELETE /credits/1 DELETE /credits/1.json\n"],["destroy","FaqsController","FaqsController.html#method-i-destroy","()","<p>DELETE /faqs/1 DELETE /faqs/1.json\n"],["destroy","HelpsController","HelpsController.html#method-i-destroy","()","<p>DELETE /helps/1 DELETE /helps/1.json\n"],["destroy","MapsController","MapsController.html#method-i-destroy","()","<p>DELETE /maps/1 DELETE /maps/1.json\n"],["destroy","MembersController","MembersController.html#method-i-destroy","()","<p>DELETE /members/1 DELETE /members/1.json destroy for members like destroy\nfor services, may need to be …\n"],["destroy","MessagesController","MessagesController.html#method-i-destroy","()","<p>DELETE /messages/1 DELETE /messages/1.json\n"],["destroy","PeopleController","PeopleController.html#method-i-destroy","()","<p>DELETE /people/1 DELETE /people/1.json commenting out the respond_to bit\ncauses tests to fail with a …\n"],["destroy","PostsController","PostsController.html#method-i-destroy","()","<p>DELETE /posts/1 DELETE /posts/1.json TBD:  is &#39;destroy_q&#39; the right\nway to destory a post?\n"],["destroy","ServicesController","ServicesController.html#method-i-destroy","()","<p>DELETE /services/1 DELETE /services/1.json since services, like members,\nnever really seen on their own, …\n"],["destroy","SessionsController","SessionsController.html#method-i-destroy","()","<p>specialized destroy, since destroy does not mean here what it normally does\n"],["destroy","TalksController","TalksController.html#method-i-destroy","()","<p>DELETE /talks/1 DELETE /talks/1.json TBD: TalksController.destroy will need\nto be customized to requirements …\n"],["destroy_q","ApplicationController","ApplicationController.html#method-i-destroy_q","(model, url)","<p>note:  &#39;:back&#39; not a good choice for url since usually the source\npage will have been rendered …\n"],["down","AddForeignKeyFromTalksToPeople","AddForeignKeyFromTalksToPeople.html#method-i-down","()",""],["down","AddForeignKeysToRelationships","AddForeignKeysToRelationships.html#method-i-down","()",""],["down","AddTalk2userFk","AddTalk2userFk.html#method-i-down","()",""],["down","ChangeTableServices","ChangeTableServices.html#method-i-down","()",""],["down","CreateComments","CreateComments.html#method-i-down","()",""],["down","CreateMessages","CreateMessages.html#method-c-down","()",""],["down","DeathToNulls","DeathToNulls.html#method-i-down","()",""],["down","DropColumnPersonTypeFromPeople","DropColumnPersonTypeFromPeople.html#method-i-down","()",""],["down","DropColumnPostedDtFromTalks","DropColumnPostedDtFromTalks.html#method-i-down","()",""],["down","FixupSocials","FixupSocials.html#method-c-down","()",""],["down","ForeignKeys","ForeignKeys.html#method-i-down","()",""],["down","MemberDefaults","MemberDefaults.html#method-c-down","()",""],["down","MemberTypeDefault","MemberTypeDefault.html#method-c-down","()",""],["down","RelationshipsForeignKeys2","RelationshipsForeignKeys2.html#method-i-down","()",""],["down","RelationshipsForeignKeys3","RelationshipsForeignKeys3.html#method-i-down","()",""],["down","RemoveColumnsFromPeople","RemoveColumnsFromPeople.html#method-i-down","()",""],["down","ServiceForeignKeys","ServiceForeignKeys.html#method-i-down","()",""],["down","SetDefaultValues","SetDefaultValues.html#method-c-down","()",""],["drop","AddForeignKeyToMessages","AddForeignKeyToMessages.html#method-i-drop","()",""],["drop","AddTalkIdToMessages","AddTalkIdToMessages.html#method-i-drop","()",""],["edit","CommentsController","CommentsController.html#method-i-edit","()","<p>GET /comments/1/edit\n"],["edit","CreditsController","CreditsController.html#method-i-edit","()","<p>GET /credits/1/edit\n"],["edit","FaqsController","FaqsController.html#method-i-edit","()","<p>GET /faqs/1/edit\n"],["edit","HelpsController","HelpsController.html#method-i-edit","()","<p>GET /helps/1/edit\n"],["edit","MapsController","MapsController.html#method-i-edit","()","<p>GET /maps/1/edit\n"],["edit","MembersController","MembersController.html#method-i-edit","()","<p>GET /members/1/edit\n"],["edit","MessagesController","MessagesController.html#method-i-edit","()","<p>GET /messages/1/edit\n"],["edit","PeopleController","PeopleController.html#method-i-edit","()","<p>GET /people/1/edit TBD:  if not admin or correct_person, switch to\n&#39;show&#39;\n"],["edit","PostsController","PostsController.html#method-i-edit","()","<p>GET /posts/1/edit\n"],["edit","ServicesController","ServicesController.html#method-i-edit","()","<p>GET /services/1/edit\n"],["edit","TalksController","TalksController.html#method-i-edit","()","<p>GET /talks/1/edit TBD:  allow easy flipping between edit &amp; control?  or\ntreat edit as scaffolding …\n"],["email_field","FormBuilderJqm","FormBuilderJqm.html#method-i-email_field","(attribute, options = {} )",""],["encrypt","Person","Person.html#method-c-encrypt","(token)",""],["esarch_field","FormBuilderJqm","FormBuilderJqm.html#method-i-esarch_field","(attribute, options = {} )",""],["fail_q","ApplicationController","ApplicationController.html#method-i-fail_q","(model, format, next_action)","<p>suppress codeclimate duplication warning\n"],["feet_center","ApplicationController","ApplicationController.html#method-i-feet_center","()","<p>center feet are what changes controller to controller; override this to\nchange\n"],["feet_center","CreditsController","CreditsController.html#method-i-feet_center","()",""],["feet_center","FaqsController","FaqsController.html#method-i-feet_center","()",""],["feet_center","HelpsController","HelpsController.html#method-i-feet_center","()",""],["feet_center","MessagesController","MessagesController.html#method-i-feet_center","()",""],["feet_center","PeopleController","PeopleController.html#method-i-feet_center","()","<p>TBD: we can change the footer for profile, settings, &amp; home.  Do we\nwish to?\n"],["feet_center","StaticPagesController","StaticPagesController.html#method-i-feet_center","()",""],["feet_center","TalksController","TalksController.html#method-i-feet_center","()","<p>currently talks &amp; people share the list of nav buttons, but that is\nlikely to change\n"],["feet_for_help_pages","ApplicationController","ApplicationController.html#method-i-feet_for_help_pages","()","<p>footer_fields often changed by controllers only some controllers need\nfooter_fields:  people, talks, …\n"],["feet_for_people_pages","ApplicationController","ApplicationController.html#method-i-feet_for_people_pages","()",""],["feet_for_static_pages","ApplicationController","ApplicationController.html#method-i-feet_for_static_pages","()",""],["file_field","FormBuilderJqm","FormBuilderJqm.html#method-i-file_field","(attribute, options = {} )",""],["find_by_remember_token","Person","Person.html#method-i-find_by_remember_token","( encrypted_remember_token )","<p>TBD: there is a problem with find_by(:remember_token, remember_token); why?\n"],["footer_fields","ApplicationController","ApplicationController.html#method-i-footer_fields","()","<p>actual interpretation of each foot is done in\nviews/layouts/_footer.html.erb\n"],["force!","Person","Person.html#method-c-force-21","(name, email, password, options = {})","<p>TBD:  add in create of default service?\n"],["form_for_jqm","ApplicationHelper","ApplicationHelper.html#method-i-form_for_jqm","(model, *args, &block)","<p>from api.rubyonrails.org, form_for documentation:\n"],["found","ApplicationController","ApplicationController.html#method-i-found","()",""],["found","PeopleController","PeopleController.html#method-i-found","()",""],["found","TalksController","TalksController.html#method-i-found","()","<p>found = search + index; also, has a &#39;Create Talk&#39; button\n"],["gravatar_for","PeopleHelper","PeopleHelper.html#method-i-gravatar_for","(person, options = { size: 50 })","<p>arguments are a &#39;person&#39; object (ActiveRecord) and an options hash\n"],["help","HelpsController","HelpsController.html#method-i-help","()",""],["home","PeopleController","PeopleController.html#method-i-home","()","<p>&#39;home&#39; is a control panel type thing TBD:  add talks box, eliminate\nupdate fields\n"],["home_page","ApplicationController","ApplicationController.html#method-i-home_page","()",""],["html_container","WillPaginate::ActionView::JqueryMobilePaginateLinkRenderer","WillPaginate/ActionView/JqueryMobilePaginateLinkRenderer.html#method-i-html_container","(html)",""],["iconify","SessionsHelper","SessionsHelper.html#method-i-iconify","(action_name)","<p>fortawesome.github.io/Font-Awesome/cheatsheet/ iconify spotted as complex\nby codeclimate 10/29/13, complexity …\n"],["index","ApplicationController","ApplicationController.html#method-i-index","()","<p>common code for index methods\n"],["index","CommentsController","CommentsController.html#method-i-index","()","<p>GET /comments GET /comments.json\n"],["index","CreditsController","CreditsController.html#method-i-index","()","<p>GET /credits GET /credits.json\n"],["index","FaqsController","FaqsController.html#method-i-index","()","<p>GET /faqs GET /faqs.json\n"],["index","HelpsController","HelpsController.html#method-i-index","()","<p>GET /helps GET /helps.json\n"],["index","MapsController","MapsController.html#method-i-index","()","<p>GET /maps GET /maps.json\n"],["index","MembersController","MembersController.html#method-i-index","()","<p>GET /members GET /members.json\n"],["index","MessagesController","MessagesController.html#method-i-index","()","<p>GET /messages GET /messages.json\n"],["index","PeopleController","PeopleController.html#method-i-index","()","<p>GET /people GET /people.json\n"],["index","PostsController","PostsController.html#method-i-index","()","<p>GET /posts GET /posts.json\n"],["index","ServicesController","ServicesController.html#method-i-index","()","<p>GET /services GET /services.json\n"],["index","TalksController","TalksController.html#method-i-index","()","<p>GET /talks GET /talks.json\n"],["map","PeopleController","PeopleController.html#method-i-map","()","<p>people can have a location associated with them so get a map as well\n"],["map","TalksController","TalksController.html#method-i-map","()",""],["map_q","ApplicationController","ApplicationController.html#method-i-map_q","(model, params)",""],["maybe","Member","Member.html#method-c-maybe","(person_id, talk_id)",""],["member_type_create_or_change","Member","Member.html#method-c-member_type_create_or_change","(person_id, talk_id, new_member_type)",""],["messages_by_person","Message","Message.html#method-c-messages_by_person","( person )","<p>is talks_by_person needed?\n"],["my_messages","MessagesController","MessagesController.html#method-i-my_messages","()",""],["new","CommentsController","CommentsController.html#method-i-new","()","<p>GET /comments/new\n"],["new","CreditsController","CreditsController.html#method-i-new","()","<p>GET /credits/new\n"],["new","FaqsController","FaqsController.html#method-i-new","()","<p>GET /faqs/new\n"],["new","HelpsController","HelpsController.html#method-i-new","()","<p>GET /helps/new\n"],["new","MapsController","MapsController.html#method-i-new","()","<p>GET /maps/new\n"],["new","MembersController","MembersController.html#method-i-new","()","<p>GET /members/new\n"],["new","MessagesController","MessagesController.html#method-i-new","()","<p>GET /messages/new\n"],["new","PeopleController","PeopleController.html#method-i-new","()","<p>GET /people/new\n"],["new","PostsController","PostsController.html#method-i-new","()","<p>GET /posts/new\n"],["new","ServicesController","ServicesController.html#method-i-new","()","<p>GET /services/new\n"],["new","SessionsController","SessionsController.html#method-i-new","()",""],["new","TalksController","TalksController.html#method-i-new","()","<p>GET /talks/new TBD:  allow people who aren&#39;t signed in to start a talk,\nbut don&#39;t allow save …\n"],["new_remember_token","Person","Person.html#method-c-new_remember_token","()","<p>class method, hence the &#39;Person.&#39;\n"],["number_field","FormBuilderJqm","FormBuilderJqm.html#method-i-number_field","(attribute, options = {} )","<p># if we wrap the hidden field, the label will show, so let hidden fields\npass thru to form_for\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">hidden_field</span>(<span class=\"ruby-identifier\">attribute</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n"],["oauth","PeopleController","PeopleController.html#method-i-oauth","()",""],["pagination","WillPaginate::ActionView::JqueryMobilePaginateLinkRenderer","WillPaginate/ActionView/JqueryMobilePaginateLinkRenderer.html#method-i-pagination","()",""],["password_field","FormBuilderJqm","FormBuilderJqm.html#method-i-password_field","(attribute, options = {} )",""],["phone_field","FormBuilderJqm","FormBuilderJqm.html#method-i-phone_field","(attribute, options = {} )",""],["posted","Talk","Talk.html#method-c-posted","()",""],["previous_or_next_page","WillPaginate::ActionView::JqueryMobilePaginateLinkRenderer","WillPaginate/ActionView/JqueryMobilePaginateLinkRenderer.html#method-i-previous_or_next_page","(page, text, classname)",""],["privacy","StaticPagesController","StaticPagesController.html#method-i-privacy","()",""],["profile","PeopleController","PeopleController.html#method-i-profile","()","<p>TBD: merge profile back into &#39;show&#39;\n"],["radio_button","FormBuilderJqm","FormBuilderJqm.html#method-i-radio_button","(attribute, options = {} )",""],["range_field","FormBuilderJqm","FormBuilderJqm.html#method-i-range_field","(attribute, options = {} )",""],["redirect_back_or","SessionsHelper","SessionsHelper.html#method-i-redirect_back_or","(default)","<p>the supplied default is &#39;person&#39;, so will turn into\n&#39;redirect_to person&#39;, which is what …\n"],["report_q","ApplicationController","ApplicationController.html#method-i-report_q","(klass, rows, q)","<p>report success\n"],["reset_password","SessionsController","SessionsController.html#method-i-reset_password","()","<p>no one is logged in; they are requesting a reset for a specific person\n"],["root_link","SessionsHelper","SessionsHelper.html#method-i-root_link","()","<p>useful links in alphabetical order:\n"],["rsvp_status_create_or_change","Member","Member.html#method-c-rsvp_status_create_or_change","(person_id, talk_id, new_rsvp_status)","<p>make the status changing guys class methods because the member record may\nnot exist\n"],["sayonara","SessionsController","SessionsController.html#method-i-sayonara","()","<p>TBD: can we specify the method (i.e. &#39;delete&#39;) in the button\nitself? note: sayonara is called …\n"],["search","ApplicationController","ApplicationController.html#method-i-search","()",""],["search","PeopleController","PeopleController.html#method-i-search","()",""],["search","TalksController","TalksController.html#method-i-search","()","<p>divers searches for talks – in a way, the heart of the system\n\n<pre>can also add twitter, facebook, favorite ...</pre>\n"],["search_fields","ApplicationController","ApplicationController.html#method-i-search_fields","()","<p>default search fields: currently only the big two (talks, people) use\nsearches\n"],["search_fields","CommentsController","CommentsController.html#method-i-search_fields","()",""],["search_fields","FaqsController","FaqsController.html#method-i-search_fields","()",""],["search_fields","MembersController","MembersController.html#method-i-search_fields","()","<p>at some point, may return member_type? a comment?\n"],["search_fields","MessagesController","MessagesController.html#method-i-search_fields","()",""],["search_fields","PeopleController","PeopleController.html#method-i-search_fields","()","<p>TBD:  add in the new fields, as url\n"],["search_fields","SessionsController","SessionsController.html#method-i-search_fields","()","<p>dummy out the search_fields; should never be searching this any way\n"],["search_fields","StaticPagesController","StaticPagesController.html#method-i-search_fields","()","<p>dummy out the search_fields; should never be searching this any way\n"],["search_fields","TalksController","TalksController.html#method-i-search_fields","()",""],["search_q","ApplicationController","ApplicationController.html#method-i-search_q","(klass)","<p>Search klass for string &#39;q&#39;. – Set flash messages appropriately. –\nReturn to search screen …\n"],["settings","PeopleController","PeopleController.html#method-i-settings","()","<p>settings are the same as edit, except we force the person to be the\ncurrent_person TBD:  put password …\n"],["settings_link","SessionsHelper","SessionsHelper.html#method-i-settings_link","()","<p>settings_link not really needed at this point:  leave code in till sure of\nthis, however\n"],["show","CommentsController","CommentsController.html#method-i-show","()","<p>GET /comments/1 GET /comments/1.json\n"],["show","CreditsController","CreditsController.html#method-i-show","()","<p>GET /credits/1 GET /credits/1.json\n"],["show","FaqsController","FaqsController.html#method-i-show","()","<p>GET /faqs/1 GET /faqs/1.json\n"],["show","HelpsController","HelpsController.html#method-i-show","()","<p>GET /helps/1 GET /helps/1.json\n"],["show","MapsController","MapsController.html#method-i-show","()","<p>GET /maps/1 GET /maps/1.json\n"],["show","MembersController","MembersController.html#method-i-show","()","<p>GET /members/1 GET /members/1.json\n"],["show","MessagesController","MessagesController.html#method-i-show","()","<p>GET /messages/1 GET /messages/1.json\n"],["show","PeopleController","PeopleController.html#method-i-show","()","<p>GET /people/1 GET /people/1.json\n"],["show","PostsController","PostsController.html#method-i-show","()","<p>GET /posts/1 GET /posts/1.json\n"],["show","ServicesController","ServicesController.html#method-i-show","()","<p>GET /services/1 GET /services/1.json\n"],["show","TalksController","TalksController.html#method-i-show","()","<p>GET /talks/1 GET /talks/1.json\n"],["sign_in","Object","Object.html#method-i-sign_in","(person, options={})","<p>sign_in is not working, inspite of being cloned from tutorial\n"],["sign_in","SessionsHelper","SessionsHelper.html#method-i-sign_in","(person)",""],["signed_in?","SessionsHelper","SessionsHelper.html#method-i-signed_in-3F","()","<p>current_person is a method, @current_person is an attribute – admittedly a\nfuzzy distinction in Ruby …\n"],["signed_in_person","SessionsHelper","SessionsHelper.html#method-i-signed_in_person","()","<p>force person to be signed in, whether they are not currently\n"],["signin_link","SessionsHelper","SessionsHelper.html#method-i-signin_link","()",""],["signout","SessionsHelper","SessionsHelper.html#method-i-signout","()",""],["signout_link","SessionsHelper","SessionsHelper.html#method-i-signout_link","()","<p>signout link only available on settings &amp; related pages\n"],["signout_page","ApplicationController","ApplicationController.html#method-i-signout_page","()","<p>note: &#39;sayonara&#39; provides a &#39;get&#39; interface to\n&#39;sessions#destroy&#39;\n"],["signup_link","SessionsHelper","SessionsHelper.html#method-i-signup_link","()",""],["sitemap","StaticPagesController","StaticPagesController.html#method-i-sitemap","()","<p>Sitemap is basic entry point for development &amp; testing;\n\n<pre>-- pages here are the &#39;key&#39; pages\n-- all ...</pre>\n"],["sitemap_page","ApplicationController","ApplicationController.html#method-i-sitemap_page","()",""],["start","TalksController","TalksController.html#method-i-start","()","<p>start is root_path for system\n"],["start_page","ApplicationController","ApplicationController.html#method-i-start_page","()","<p>TBD:  switch to a real start page when we have one built!, see notes for\ntalks#start\n"],["store_location","SessionsHelper","SessionsHelper.html#method-i-store_location","()",""],["sub?","SessionsHelper","SessionsHelper.html#method-i-sub-3F","()",""],["submit","FormBuilderJqm","FormBuilderJqm.html#method-i-submit","(value = '', options = {})","<p>TBD: switch to jqm style buttons; if editing, automagically put in delete\nbutton unless told not to\n"],["swatch","ApplicationHelper","ApplicationHelper.html#method-i-swatch","( controller_name = nil )","<p>returns a correct data-theme=“l” where l can be from a to f, depending on\nthe context a = black …\n"],["tagged_id","ApplicationHelper","ApplicationHelper.html#method-i-tagged_id","(tag = nil)","<p>TBD:  see if we can use content_for or div_for where we are using this\n\n<pre>-- noting that jQuery Mobile needs ...</pre>\n"],["talks_by_person","Talk","Talk.html#method-c-talks_by_person","( person )","<p>TBD:  upgrade talks_by_person to include memberships\n"],["talks_new_page","ApplicationController","ApplicationController.html#method-i-talks_new_page","()",""],["talks_search_page","ApplicationController","ApplicationController.html#method-i-talks_search_page","()",""],["teapot_q","ApplicationController","ApplicationController.html#method-i-teapot_q","()","<p>only controllers can call a teapot teapot_q is internal:  is the\n&#39;under-construction&#39; error\n"],["telephone_field","FormBuilderJqm","FormBuilderJqm.html#method-i-telephone_field","(attribute, options = {} )",""],["test_flow","ApplicationHelper","ApplicationHelper.html#method-i-test_flow","(tag)","<p>test_flow used to figure out where stuff needs to live so we can get at it\n"],["text_area","FormBuilderJqm","FormBuilderJqm.html#method-i-text_area","(attribute, options = {} )",""],["text_field","FormBuilderJqm","FormBuilderJqm.html#method-i-text_field","(attribute, options = {} )",""],["time_field","FormBuilderJqm","FormBuilderJqm.html#method-i-time_field","(attribute, options = {} )",""],["unadmin","Member","Member.html#method-c-unadmin","(person_id, talk_id)",""],["up","AddForeignKeyFromTalksToPeople","AddForeignKeyFromTalksToPeople.html#method-i-up","()",""],["up","AddForeignKeyToMessages","AddForeignKeyToMessages.html#method-i-up","()",""],["up","AddForeignKeysToRelationships","AddForeignKeysToRelationships.html#method-i-up","()",""],["up","AddTalk2userFk","AddTalk2userFk.html#method-i-up","()",""],["up","AddTalkIdToMessages","AddTalkIdToMessages.html#method-i-up","()",""],["up","ChangeTableServices","ChangeTableServices.html#method-i-up","()",""],["up","CreateComments","CreateComments.html#method-i-up","()",""],["up","CreateMessages","CreateMessages.html#method-c-up","()",""],["up","DeathToNulls","DeathToNulls.html#method-i-up","()",""],["up","DropColumnPersonTypeFromPeople","DropColumnPersonTypeFromPeople.html#method-i-up","()",""],["up","DropColumnPostedDtFromTalks","DropColumnPostedDtFromTalks.html#method-i-up","()",""],["up","DropMapsAndCalendars","DropMapsAndCalendars.html#method-i-up","()",""],["up","DropTableMessages","DropTableMessages.html#method-c-up","()",""],["up","DropTableNotifications","DropTableNotifications.html#method-c-up","()",""],["up","DropsLotsOfTables","DropsLotsOfTables.html#method-c-up","()",""],["up","EndRelationships","EndRelationships.html#method-c-up","()",""],["up","Fixup","Fixup.html#method-i-up","()","<p>fixup confused state that automated migrations have gotten us into\n"],["up","FixupMessages","FixupMessages.html#method-c-up","()",""],["up","FixupSocials","FixupSocials.html#method-c-up","()",""],["up","ForeignKeys","ForeignKeys.html#method-i-up","()",""],["up","MemberDefaults","MemberDefaults.html#method-c-up","()",""],["up","MemberTypeDefault","MemberTypeDefault.html#method-c-up","()",""],["up","RelationshipsForeignKeys2","RelationshipsForeignKeys2.html#method-i-up","()",""],["up","RelationshipsForeignKeys3","RelationshipsForeignKeys3.html#method-i-up","()",""],["up","RemoveColumnsFromPeople","RemoveColumnsFromPeople.html#method-i-up","()",""],["up","ServiceForeignKeys","ServiceForeignKeys.html#method-i-up","()",""],["update","CommentsController","CommentsController.html#method-i-update","()","<p>PATCH/PUT /comments/1 PATCH/PUT /comments/1.json\n"],["update","CreditsController","CreditsController.html#method-i-update","()","<p>PATCH/PUT /credits/1 PATCH/PUT /credits/1.json\n"],["update","FaqsController","FaqsController.html#method-i-update","()","<p>PATCH/PUT /faqs/1 PATCH/PUT /faqs/1.json\n"],["update","HelpsController","HelpsController.html#method-i-update","()","<p>PATCH/PUT /helps/1 PATCH/PUT /helps/1.json\n"],["update","MapsController","MapsController.html#method-i-update","()","<p>PATCH/PUT /maps/1 PATCH/PUT /maps/1.json\n"],["update","MembersController","MembersController.html#method-i-update","()","<p>PATCH/PUT /members/1 PATCH/PUT /members/1.json\n"],["update","MessagesController","MessagesController.html#method-i-update","()","<p>PATCH/PUT /messages/1 PATCH/PUT /messages/1.json\n"],["update","PeopleController","PeopleController.html#method-i-update","()","<p>PATCH/PUT /people/1 PATCH/PUT /people/1.json update should be called by\nedit, settings\n"],["update","PostsController","PostsController.html#method-i-update","()","<p>PATCH/PUT /posts/1 PATCH/PUT /posts/1.json\n"],["update","ServicesController","ServicesController.html#method-i-update","()","<p>PATCH/PUT /services/1 PATCH/PUT /services/1.json\n"],["update","TalksController","TalksController.html#method-i-update","()","<p>PATCH/PUT /talks/1 PATCH/PUT /talks/1.json TBD:  verify update is working\ncorrectly\n"],["update_q","ApplicationController","ApplicationController.html#method-i-update_q","(model, params)",""],["url_field","FormBuilderJqm","FormBuilderJqm.html#method-i-url_field","(attribute, options = {} )",""],["valid_signin","Object","Object.html#method-i-valid_signin","(person)",""],["validate","TalkValidator","TalkValidator.html#method-i-validate","(talk_record)",""],["week_field","FormBuilderJqm","FormBuilderJqm.html#method-i-week_field","(attribute, options = {} )",""],["wrap","TalksHelper","TalksHelper.html#method-i-wrap","(summary)",""],["ADMIN","","ADMIN_rdoc.html","","<p>Admin\n<p>start point is meta_admin, a menu style page\n<p>basically direct, low level access to tables\n"],["DEVNOTES","","DEVNOTES_rdoc.html","","<p>Development\n<p>Overall Strategy\n<p>Starting with tutorial &amp; branching out\n"],["Gemfile","","Gemfile.html","","<p># Gemfile for project Mencken Tarot &#39;mt&#39;\n<p>source &#39;rubygems.org&#39;\n<p>ruby &#39;2.0.0&#39;\n"],["MONETIZATION","","MONETIZATION_rdoc.html","","<p>Monetization\n<p>proof of skill\n<p>starting point for client apps\n"],["Procfile","","Procfile.html","","<p>## Procfile recommended by heroku for use with unicorn in their cedar stack\n##  see devcenter.heroku.com/articles/rails-unicorn …\n"],["README","","README_rdoc.html","","<p>TalkInvite\n<p>Objective\n<p>Master &amp; demo skill set, get an app up.\n"],["Rakefile","","Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["STORIES","","STORIES_rdoc.html","","<p>Stories\n<p>organized by life cycle\n<p>life cycle is implicit “story of a talk”\n"],["README","","app/controllers/README_rdoc.html","","<p>Controllers\n<p>Procedures\n<p>When fields in a table are changed, the list of required/allowed parameters\n(params.require …\n"],["m","","app/controllers/m.html","","<p># Services Controller # # may need to use multiple source for services,\ni.e. google, yahoo, open street …\n"],["README","","app/models/README_rdoc.html","","<p>Schema\n<p>List of Tables\n<p>Note we can&#39;t use &#39;file&#39; as a table name, conflicts with Ruby\n"],["README","","app/views/README_rdoc.html","","<p>Views\n<p>Philosophy\n<p>– simple color scheme, only frame, let the people, talks, locations, tags,\nfiles, provide …\n"],["README","","app/views/ads/README_rdoc.html","","<p>Ads\n<p>– partials only\n<p>Fields (guesswork)\n"],["README","","app/views/attachments/README_rdoc.html","","<p>Attachments\n<p>– partials only\n<p>– polymorphic, very very polymorphic, per talks, venues, lots of other\nplaces …\n"],["README","","app/views/calendars/README_rdoc.html","","<p>Calendars\n<p>– partials only\n<p>– uses jquery library\n"],["README","","app/views/comments/README_rdoc.html","","<p>Comments\n<p>– are really a kind of post that doesn&#39;t change the talks state\n<p>– has a from person, talk …\n"],["README","","app/views/credits/README_rdoc.html","","<p>Credits\n<p>– TBD: url field\n<p>Index\n"],["README","","app/views/faqs/README_rdoc.html","","<p>FAQs\n<p>TBD:  url field\n<p>TBD:  attachments?\n"],["README","","app/views/friends/README_rdoc.html","","<p>Friends\n<p>– partials only\n<p>– mutual consent, like google\n"],["README","","app/views/groups/README_rdoc.html","","<p>Groups\n<p>– partials only\n<p>– tags for your friends, basically\n"],["README","","app/views/helps/README_rdoc.html","","<p>Helps\n<p>– TBD: url field\n<p>– TBD: hide name field\n"],["l","","app/views/l.html","","<p>vi posts/README.rdoc comments/README.rdoc members/README.rdoc\nmaps/README.rdoc friends/README.rdoc groups/README.rdoc …\n"],["README","","app/views/layouts/README_rdoc.html","","<p>View Helpers &amp; Partials\n<p>mobile first\n<p>helpers for forms go in app/helpers/application_helpers.rb\n"],["README","","app/views/maps/README_rdoc.html","","<p>Maps\n<p>– partials only\n<p>– uses leaflet, per example\n"],["README","","app/views/members/README_rdoc.html","","<p>Members\n<p>– partials only\n<p>– details are given in a link to the members profile page\n"],["README","","app/views/messages/README_rdoc.html","","<p>Messages\n<p>– TBD: attachments\n<p>– TBD: delayed sending, cancel if not received\n"],["README","","app/views/people/README_rdoc.html","","<p>People\n<p>Home\n<p>– put name as title, put button in to change name, fix sitemap check to\ntrack this\n"],["README","","app/views/posts/README_rdoc.html","","<p>Posts\n<p>– comments that change the state of the talk (usually)\n<p>– partials only!\n"],["README","","app/views/relationships/README_rdoc.html","","<p>Relationships\n<p>– partials only\n<p>– thru table for groups &amp; friends\n"],["README","","app/views/services/README_rdoc.html","","<p>Services\n<p>– default is &#39;talkinvite&#39;\n<p>– also, email, dm, twitter, facebook\n"],["README","","app/views/sessions/README_rdoc.html","","<p>Sessions\n<p>– all of the forms here should be dialogs\n<p>Signin\n"],["README","","app/views/static_pages/README_rdoc.html","","<p>Static Pages \n<p>About \n<p>– explains point, includes contact, static, now connected\n"],["README","","app/views/tags/README_rdoc.html","","<p>Tags\n<p>– partials only\n<p>– really topics\n"],["README","","app/views/talks/README_rdoc.html","","<p>Talks forms\n<p>Search\n<p>– build up from search, index, new button (only if logged in)\n"],["README","","app/views/venues/README_rdoc.html","","<p>Venues\n<p>– partials only\n<p>– basic name, address, with a number of maps pointing up\n"],["d","","config/d.html","","<p>diff –git a/config/routes.rb b/config/routes.rb index f0acc05..860f99e\n100644 — a/config/routes.rb …\n"],["README","","db/README_rdoc.html","","<p>Database Issues\n<p>Rebuilds\n<p>Can&#39;t reset database due to dependencies among tables, but:\n"],["README","","public/README_rdoc.html","","<p>Public Pages\n<p>Fix up 404 &amp; related pages (422? 500) to match talkinvite site\ngenerally\n"],["robots","","public/robots_txt.html","","<p>See www.robotstxt.org/wc/norobots.html for documentation on how to use the\nrobots.txt file\n<p>To ban all …\n"],["README","","spec/README_rdoc.html","","<p>RSpec tests\n<p>TBD:  clear the pending\n<p>TBD:  figure out how to use the helpers or get rid of\n"],["README","","spec/features/README_rdoc.html","","<p>Feature Tests\n<p>The features directory is supposed to work better with capybara tests\n<p>seems to make no difference …\n"],["README","","spec/models/README_rdoc.html","","<p>Model Tests\n<p>test the internal functions for the models here\n<p>good intermediate point, while building up …\n"],["README","","spec/requests/README_rdoc.html","","<p>Requests\n<p>Request specs are one per model.   Specify tests of each models stories.\n<p>Data specs are basically …\n"],["d","","spec/routing/d.html","","<p>diff –git a/spec/routing/messages_routing_spec.rb\nb/spec/routing/messages_routing_spec.rb index 939b2d7..3c96090 …\n"]]}}